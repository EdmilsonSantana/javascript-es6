{"version":3,"sources":["../../app-es6/services/NegociacaoService.js"],"names":["HttpService","ConnectionFactory","NegociacaoDao","Negociacao","NegociacaoService","_http","listaAtual","obterNegociacoes","then","negociacoes","filter","some","negociacao","isEquals","negociacaoExistente","catch","console","log","erro","Error","Promise","all","obterNegociacoesDaSemana","obterNegociacoesDaSemanaAnterior","obterNegociacoesDaSemanaRetrasada","periodos","reduce","dados","periodo","concat","get","map","Date","objeto","data","quantidade","valor","getConnection","connection","dao","adicionar","listarTodos","apagarTodos"],"mappings":"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","file":"NegociacaoService.js","sourcesContent":["import {HttpService} from './HttpService';\r\nimport {ConnectionFactory} from './ConnectionFactory'\r\nimport {NegociacaoDao} from '../dao/NegociacaoDao'\r\nimport {Negociacao} from \"../models/Negociacao\";\r\n\r\nexport class NegociacaoService {\r\n\r\n\r\n\tconstructor() {\r\n\t\tthis._http = new HttpService();\r\n\t}\r\n\r\n\timporta(listaAtual) {\r\n\t\treturn this.obterNegociacoes()\r\n\t\t\t.then(negociacoes => \r\n\t\t\t\tnegociacoes.filter(negociacao => \r\n\t\t\t\t\t!listaAtual.some(negociacaoExistente =>\r\n\t\t\t\t\t\tnegociacao.isEquals(negociacaoExistente)))\r\n\t\t\t)\r\n\t\t\t.catch(erro => {\r\n\t\t\t\tconsole.log(erro);\r\n\t\t\t\tthrow new Error('Não foi possível buscar negociações para importar');\r\n\t\t\t});\r\n\t}\r\n\r\n\tobterNegociacoes() {\r\n\t\treturn Promise.all([\r\n\t\t\tthis.obterNegociacoesDaSemana(),\r\n\t\t\tthis.obterNegociacoesDaSemanaAnterior(),\r\n\t\t\tthis.obterNegociacoesDaSemanaRetrasada()\r\n\t\t]).then(periodos => {\r\n\r\n\t\t\tlet negociacoes = periodos\r\n\t\t\t\t.reduce((dados, periodo) => dados.concat(periodo), []);\r\n\r\n\t\t\treturn negociacoes;\r\n\r\n\t\t}).catch(erro => {\r\n\t\t\tthrow new Error(erro)\r\n\t\t});\r\n\t}\r\n\t\r\n\tobterNegociacoesDaSemana() {\r\n\t\t\r\n\t\treturn this._http.get('negociacoes/semana')\r\n\t\t\t\t.then(negociacoes => {\r\n\t\t\t\t\tconsole.log(negociacoes)\r\n\t\t\t\t\treturn negociacoes.map(objeto => \r\n\t\t\t\t\t\tnew Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor));\r\n\t\t\t\t})\r\n\t\t\t\t.catch(erro => {\r\n\t\t\t\t\tconsole.log(erro);\r\n\t\t\t\t\tthrow new Error('Não foi possível obter as negociações da semana.');\r\n\t\t\t\t});\r\n\t\t\r\n\t}\r\n\r\n\tobterNegociacoesDaSemanaRetrasada() {\r\n\r\n\t\treturn this._http.get('negociacoes/retrasada')\r\n\t\t\t\t.then(negociacoes => {\r\n\t\t\t\t\tconsole.log(negociacoes)\r\n\t\t\t\t\treturn negociacoes.map(objeto => \r\n\t\t\t\t\t\tnew Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor));\r\n\t\t\t\t})\r\n\t\t\t\t.catch(erro => {\r\n\t\t\t\t\tconsole.log(erro);\r\n\t\t\t\t\tthrow new Error('Não foi possível obter as negociações da semana retrasada.');\r\n\t\t\t\t});\r\n\r\n\t}\r\n\r\n\tobterNegociacoesDaSemanaAnterior() {\r\n\r\n\t\treturn this._http.get('negociacoes/anterior')\r\n\t\t\t\t.then(negociacoes => {\r\n\t\t\t\t\tconsole.log(negociacoes)\r\n\t\t\t\t\treturn negociacoes.map(objeto => \r\n\t\t\t\t\t\tnew Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor));\r\n\t\t\t\t})\r\n\t\t\t\t.catch(erro => {\r\n\t\t\t\t\tconsole.log(erro);\r\n\t\t\t\t\tthrow new Error('Não foi possível obter as negociações da semana anterior.');\r\n\t\t\t\t});\r\n\t}\r\n\r\n\tcadastrar(negociacao) {\r\n\t\treturn ConnectionFactory\r\n\t\t\t.getConnection()\r\n\t\t\t.then(connection => new NegociacaoDao(connection))\r\n\t\t\t.then(dao => dao.adicionar(negociacao))\r\n\t\t\t.then(() => 'Negociação adicionada com sucesso')\r\n\t\t\t.catch(erro => {\r\n\t\t\t\tconsole.log(erro);\r\n\t\t\t\tthrow new Error('Não foi possível adicionar a negociação');\r\n\t\t\t});\r\n\t}\r\n\r\n\tlistar() {\r\n\t\treturn ConnectionFactory\r\n\t\t\t.getConnection()\r\n\t\t\t.then(connection => new NegociacaoDao(connection))\r\n\t\t\t.then(dao => dao.listarTodos())\r\n\t\t\t.catch(erro => {\r\n\t\t\t\tconsole.log(erro);\r\n\t\t\t\tthrow new Error('Não foi possível obter as negociações');\r\n\t\t\t});\r\n\t}\r\n\r\n\tapagar() {\r\n\t\treturn ConnectionFactory\r\n\t\t\t.getConnection()\r\n\t\t\t.then(connection => new NegociacaoDao(connection))\r\n\t\t\t.then(dao => dao.apagarTodos())\r\n\t\t\t.then(() => 'Negociações apagadas com sucesso')\r\n\t\t\t.catch(erro => {\r\n\t\t\t\tconsole.log(erro);\r\n\t\t\t\tthrow new Error('Não foi possível apagar as negociações')\r\n\t\t\t});\r\n\r\n\t}\r\n\r\n}"]}